import maya.cmds as cmds

def slice_mesh(cell_size):
    selection_list = cmds.ls(selection=True, flatten=True)
    
    if not selection_list:
        cmds.warning("You must select a mesh.")
        return
    
    selected_mesh = selection_list[0]
    
    # Check if the selected object is a polygonal mesh
    if not cmds.nodeType(selected_mesh) == "transform":
        cmds.warning("Selected object is not a polygonal mesh.")
        return

    # Get the shape node of the selected mesh
    shape_node = cmds.listRelatives(selected_mesh, shapes=True)
    if not shape_node:
        cmds.warning("Selected object does not have a valid shape node.")
        return
    
    bounding_box = cmds.polyEvaluate(shape_node[0], boundingBox=True)
    
    # Calculate the number of cuts needed
    num_cuts_x = int((bounding_box[3] - bounding_box[0]) / cell_size)
    num_cuts_y = int((bounding_box[4] - bounding_box[1]) / cell_size)
    num_cuts_z = int((bounding_box[5] - bounding_box[2]) / cell_size)
    
    # Slice in X direction
    for i in range(1, num_cuts_x + 1):
        cmds.polyCut(selected_mesh, pc=[bounding_box[0] + i * cell_size, bounding_box[1], bounding_box[2]], ro=[0, 0, 0], es=[0, 1, 0])
    # Slice in Y direction
    for i in range(1, num_cuts_y + 1):
        cmds.polyCut(selected_mesh, pc=[bounding_box[0], bounding_box[1] + i * cell_size, bounding_box[2]], ro=[0, 0, 0], es=[1, 0, 0])
    # Slice in Z direction
    for i in range(1, num_cuts_z + 1):
        cmds.polyCut(selected_mesh, pc=[bounding_box[0], bounding_box[1], bounding_box[2] + i * cell_size], ro=[0, 0, 0], es=[0, 0, 1])

def create_slice_mesh_ui():
    window_name = "sliceMeshWindow"
    if cmds.window(window_name, exists=True):
        cmds.deleteUI(window_name)
    
    cmds.window(window_name, title="Slice Mesh")
    cmds.columnLayout(adjustableColumn=True)
    cell_size_field = cmds.floatFieldGrp(label="Cell Size", numberOfFields=1)
    
    def slice_mesh_wrapper(*args):
        cell_size = cmds.floatFieldGrp(cell_size_field, query=True, value1=True)
        slice_mesh(cell_size)
    
    cmds.button(label="Slice Mesh", command=slice_mesh_wrapper)
    cmds.showWindow(window_name)

create_slice_mesh_ui()
