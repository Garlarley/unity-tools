import maya.cmds as cmds

def slice_mesh(cell_size):
    selection_list = cmds.ls(selection=True, flatten=True)
    
    if not selection_list:
        cmds.warning("You must select a mesh.")
        return
    
    selected_mesh = selection_list[0]
    bounding_box = cmds.polyEvaluate(selected_mesh, boundingBox=True)
    
    # Calculate the number of cuts needed
    num_cuts_x = int((bounding_box['boundingBoxMaxX'] - bounding_box['boundingBoxMinX']) / cell_size)
    num_cuts_y = int((bounding_box['boundingBoxMaxY'] - bounding_box['boundingBoxMinY']) / cell_size)
    num_cuts_z = int((bounding_box['boundingBoxMaxZ'] - bounding_box['boundingBoxMinZ']) / cell_size)
    
    # Perform slicing operations
    for i in range(num_cuts_x):
        cut_pos_x = bounding_box['boundingBoxMinX'] + (i + 1) * cell_size
        cmds.polyCut(selected_mesh, pc=[cut_pos_x, 0, 0], ro=[0, 0, 0], es=[0, 1, 0])

    for i in range(num_cuts_y):
        cut_pos_y = bounding_box['boundingBoxMinY'] + (i + 1) * cell_size
        cmds.polyCut(selected_mesh, pc=[0, cut_pos_y, 0], ro=[0, 0, 0], es=[1, 0, 0])

    for i in range(num_cuts_z):
        cut_pos_z = bounding_box['boundingBoxMinZ'] + (i + 1) * cell_size
        cmds.polyCut(selected_mesh, pc=[0, 0, cut_pos_z], ro=[0, 0, 0], es=[0, 0, 1])

def create_slice_mesh_ui():
    window_name = "sliceMeshWindow"
    if cmds.window(window_name, exists=True):
        cmds.deleteUI(window_name)
    
    cmds.window(window_name, title="Slice Mesh")
    cmds.columnLayout(adjustableColumn=True)
    cell_size_field = cmds.floatFieldGrp(label="Cell Size", numberOfFields=1)
    
    def slice_mesh_wrapper(*_):
        cell_size = cmds.floatFieldGrp(cell_size_field, query=True, value1=True)
        slice_mesh(cell_size)
    
    cmds.button(label="Slice Mesh", command=slice_mesh_wrapper)
    cmds.showWindow(window_name)

create_slice_mesh_ui()
